{"componentChunkName":"component---src-templates-page-js","path":"/parse/api/","result":{"data":{"page":{"html":"<h1 id=\"csv-parse-api\" style=\"position:relative;\"><a href=\"#csv-parse-api\" aria-label=\"csv parse api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSV Parse API</h1>\n<p>There are multiple APIs available, each with their own advantages and disadvantages. Under the hood, they are all based on the same implementation.</p>\n<ul>\n<li><a href=\"/parse/api/stream/\">Stream API</a><br>\nThe stream API might not be the most pleasant API to use but is scalable. It\nis the one upon which all the other implementation are based.</li>\n<li><a href=\"/parse/api/callback/\">Callback API</a><br>\nThe callback API buffers all the emitted data from the stream API into a single\nobject which is passed to a user provided function. Passing a function is\neasier than implementing the stream events function but it implies that the\nall dataset must fit into the available memory and it will only be available\nafter the last record has been processed.</li>\n<li><a href=\"/parse/api/stream_callback/\">Stream + callback API</a><br>\nReplace the writable stream with a string or buffer and the readable stream with a callback function.</li>\n<li><a href=\"/parse/api/sync/\">Sync API</a><br>\nThe sync API provides simplicity, readability and convenience. Like for the\ncallback API, it is meant for small dataset which fit in memory and which\nusage tolerates waiting for the last record.</li>\n<li><a href=\"/parse/api/async_iterator/\">Async iterator API</a><br>\nThe Async iterator API is both scalable and elegant. It takes advantage of\nthe native Readable Stream API upon which the parser is build to iterate\nover the parsed records.</li>\n</ul>\n<p>For additional usages and examples, you may refer to:</p>\n<ul>\n<li><a href=\"/parse/api/\">the API page</a>,</li>\n<li><a href=\"https://github.com/adaltas/node-csv-parse/tree/master/samples\">the \"samples\" folder</a></li>\n<li><a href=\"https://github.com/adaltas/node-csv-parse/tree/master/test\">the \"test\" folder</a>.</li>\n</ul>","frontmatter":{"title":"API","description":"CSV Parse - stream, callback and sync APIs","keywords":["csv","parse","parser","api","callback","stream","sync","promise"]},"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/parse/api.md","slug":"/parse/api/"}}},"pageContext":{}},"staticQueryHashes":["3308247434"]}