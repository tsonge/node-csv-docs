{"componentChunkName":"component---src-templates-page-js","path":"/parse/info/","result":{"data":{"page":{"html":"<h1 id=\"csv-parse-info-properties\" style=\"position:relative;\"><a href=\"#csv-parse-info-properties\" aria-label=\"csv parse info properties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSV Parse info properties</h1>\n<div class=\"toc\">\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#toc\" aria-hidden class=\"anchor\"></a>Table of Contents</h2>\n<ul>\n<li><a href=\"#accessing-info\">Accessing <code class=\"language-text\">info</code></a></li>\n<li><a href=\"#accessing-info-in-the-callback\">Accessing <code class=\"language-text\">info</code> in the callback</a></li>\n</ul>\n</div>\n<p>Those properties report internal information such as the number of records which have been processed. They are available in the <code class=\"language-text\">info</code> object of a parser instance and are also exported as the third argument of the user callback.</p>\n<p>Note, some properties are used internally by the parser, don't modify them.</p>\n<ul>\n<li><code class=\"language-text\">comment_lines</code> (number)<br>\nCount the number of lines being fully commented.</li>\n<li><code class=\"language-text\">empty_lines</code> (number)<br>\nCount the number of processed empty lines; was <code class=\"language-text\">empty_line_count</code> until version 3; work only with the <code class=\"language-text\">skip_empty_lines</code> option or an error will be thrown if an empty line is found.</li>\n<li><code class=\"language-text\">lines</code> (number)<br>\nThe number of lines encountered in the source dataset, start at 1 for the first line.</li>\n<li><code class=\"language-text\">records</code> (number)<br>\nCount the number of processed records.</li>\n<li><code class=\"language-text\">invalid_field_length</code> (number)<br>\nNumber of non uniform records when <code class=\"language-text\">relax_column_count</code> is true; was <code class=\"language-text\">skipped_line_count</code> until version 3.</li>\n</ul>\n<h2 id=\"accessing-code-classlanguage-textinfocode\" style=\"position:relative;\"><a href=\"#accessing-code-classlanguage-textinfocode\" aria-label=\"accessing code classlanguage textinfocode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessing <code class=\"language-text\">info</code></h2>\n<p>The <code class=\"language-text\">info</code> object is directly available from the parser instance.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> parse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'csv-parse'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> parser <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1,2,3\\na,b,c'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Using a function declaration</span>\nparser<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readable'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> record <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>lines<span class=\"token punctuation\">,</span> records<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>info\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Current state is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lines<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> lines and </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>records<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> records.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Using a fat arrow</span>\nparser<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>lines<span class=\"token punctuation\">,</span> records<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>info\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">There are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lines<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> lines with </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>records<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> records.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"accessing-code-classlanguage-textinfocode-in-the-callback\" style=\"position:relative;\"><a href=\"#accessing-code-classlanguage-textinfocode-in-the-callback\" aria-label=\"accessing code classlanguage textinfocode in the callback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessing <code class=\"language-text\">info</code> in the callback</h2>\n<p>The <code class=\"language-text\">info</code> object in provided in the third argument of the callback, after the <code class=\"language-text\">error</code> and <code class=\"language-text\">data</code> arguments.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> parse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'csv-parse'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1,2,3\\na,b,c'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>lines<span class=\"token punctuation\">,</span> records<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">There are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lines<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> lines with </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>records<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> records.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Info properties","description":"CSV Parse - info properties","keywords":["csv","parse","count","counter","information","lines","records"]},"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/parse/info.md","slug":"/parse/info/"}}},"pageContext":{}},"staticQueryHashes":["3308247434"]}